

# find and replace txt in multiple files
grep -rli 'old-word' * | xargs -i@ sed -i 's/old-word/new-word/g' @

Command breakdown
    grep -r: --recursive, recursively read all files under each directory.
    grep -l: --print-with-matches, prints the name of each file that has a match, instead of printing matching lines.
    grep -i: --ignore-case.

    xargs: transform the STDIN to arguments, follow this answer.
    xargs -i@ ~command contains @~: a placeholder for the argument to be used in a specific position in the ~command~, the @ sign is a placeholder which could replaced by any string.

    sed -i: edit files in place, without backups.
    sed s/regexp/replacement/: substitute string matching regexp with replacement.
    sed s/regexp/replacement/g: global, make the substitution for each match instead of only the first match.




vim:
  substitude
  :%s/old/new/g       # % -- the whole range
